@page "/produto/edit/{Id:int}"
@using ERP.Application.ViewModels
@using ERP.Application.Interfaces
@using AutoMapper
@inject NavigationManager NavigationManager
@inject IProductAppService ProductAppService
@inject ICategoryAppService CategoryAppService
@inject ISupplierAppService SupplierAppService
@inject IMapper Mapper;

<div>
    <h3>Produto: @Id</h3>

    <EditForm Model="@_model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="card card-primary">
            <div class="card-body">
                <div class="form-group row">
                    <div class="col-sm-4">
                        <label for="name">Nome</label>
                        <InputText id="name" class="form-control" placeholder="Nome" @bind-Value="@_model.Name" />
                        <ValidationMessage For="@(() => _model.Name)" />
                    </div>
                    <div class="col-sm-4">
                        <label for="price">Preço</label>
                        <InputNumber id="price" class="form-control" placeholder="Preço" @bind-Value="@_model.Price" />
                        <ValidationMessage For="@(() => _model.Price)" />
                    </div>
                    <div class="col-sm-4">
                        <label for="stockQuantity">Quantidade de estoque</label>
                        <InputNumber id="stockQuantity" class="form-control" placeholder="Quantidade de estoque" @bind-Value="@_model.StockQuantity" />
                        <ValidationMessage For="@(() => _model.StockQuantity)" />
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-4">
                        <label for="description">Descrição</label>
                        <InputText id="description" class="form-control" placeholder="Descrição" @bind-Value="@_model.Description" />
                        <ValidationMessage For="@(() => _model.Description)" />
                    </div>
                    <div class="col-sm-4">
                        <label for="codeBars">Código de barras</label>
                        <InputText id="codeBars" type="text" class="form-control" placeholder="Código de barras" @bind-Value="@_model.BarCode" />
                        <ValidationMessage For="@(() => _model.BarCode)" />
                    </div>
                    <div class="col-sm-4">
                        <label for="supplierId">Código do fornecedor</label>
                        <InputSelect id="supplierId" class="form-control" @bind-Value="@_model.SupplierId">
                            @if (_model.SupplierId is null)
                            {
                                <option selected value="">--Nenhum--</option>
                            }
                            @if (_model.SupplierId is not null)
                            {
                                <option value="">--Nenhum--</option>
                            }
                            @foreach (var supplier in _suppliers)
                            {
                                <option value="@supplier.Id">@supplier.Name</option>
                            }
                        </InputSelect>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-4">
                        <label for="categoryId">Categoria</label>
                        <InputSelect id="categoryId" class="form-control" @bind-Value="@_model.CategoryId">
                            @if (_model.CategoryId is null)
                            {
                                <option selected value="">--Nenhum--</option>
                            }
                            @if (_model.CategoryId is not null)
                            {
                                <option value="">--Nenhum--</option>
                            }
                            @foreach (var category in _categories)
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </InputSelect>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="float-right">
                    <button type="button" @onclick='() => NavigationManager.NavigateTo("/produto")' class="btn btn-secondary">Voltar</button>
                    <button type="submit" class="btn btn-primary" disabled="@(!context.IsModified() || !context.Validate())">Atualizar</button>
                </div>
            </div>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private ProductEditViewModel _model = new();
    private List<CategoryViewModel> _categories = new();
    private List<SupplierViewModel> _suppliers = new();

    protected override async Task OnInitializedAsync()
    {
        _categories = await CategoryAppService.GetAll();
        _suppliers = await SupplierAppService.GetAll();

        var product = await ProductAppService.GetById(Id);
        if (product == null)
            NavigationManager.NavigateTo("/produto");

        Mapper.Map(product, _model);
    }

    private async void HandleValidSubmit()
    {
        await ProductAppService.Update(Id, _model);

        NavigationManager.NavigateTo("/produto");
    }
}
